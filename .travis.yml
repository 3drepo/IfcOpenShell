language: cpp
compiler: gcc
os: linux
dist: bionic
sudo: required

env :
  global:
    - secure: "f/ac03GyWfCWBv3M7cdeQbjFmti2zaRAfF0d3bIvq+d7zQRhhhH7BBYuxxg9eEHvmRPG5WsYhTwOMKiVqleW0efqfLzJY1lvjnk4zrKM1BN+kcAsM4xBNra/i44USi4TsbaAKCUSD7c0kbxCbtG/2Sg6BDV+t+2Hlnwjjw7sWePZU+hgExQU3nErwij7waDM7/wH6WCogvquUrPKI8BMl8kE/iKPd+OcP3OWdqMQ9zcUWAsKrPHpl1KHfymobgRzrP3gqGNqvxbxU9Uet1jx88RZdUerq3PvomsCb4ldnRHfkqMbMDuUtd4v0+WBaPWuK0LxpxB41b3IWVl0C4n61i9Z3zt9dyd505u+H0hyVjLuEcdvNYyKgLDpaJbNJ5hK7NFsEpe+OX5ANk+nP5AWwIpt5NtrfFa3yhOc2JKOP/tKhRuorQj/CPN/rdk25CwNzYDwDtIMSDsVYyy2PhWMaCa58Cb8ah1S8IYPxmU55E70AgAiFlGtC+sHJQbpGQjBLQ6gcAGT+jXEXkrNB/FNgfZTAvkHJe5VVPCP8Nat3gMY1Kc6jCV++hsdxP9ioA5lwqyRpBwASYehV9xvXKbjiJ1xYfyR5o+4GJeUBtv4/4Nw5UQqRrYI/w6XwOMhUbxfq8SCAZ4WxnetnYENtg4dB+FbNhxTqa2Vv1XjrHs1S0E="
    - secure: "CyTgR9RLSRq2Ktz153c06XvV8u4NXUvSba4IHkD15dEuY+cUn/f62Ly7/fCI7k5WeNe4AXgngMt2yYJVwhhln67mwJQiiKH9gLhq3yRIKU7uX27dJsyD9hsxJRlH459eDP9GZ3SIlDTlbfGHhbSFkb3mZ2IjdlQVecjIBpUEE5krf0zN91OERzRyC51GGIh+nPrUazv5HS2uA6Dp1hnVbYHvFReBKQGZjiKJU8/4KTlpKzF3VE+i8h2Qu8dXW+jkf7nghP+gpaw0DO0ivPruhELdr28V7ulgKcCwOuGfrldGbaPT65brDAsblVXHFJaR42M+fQJJ5ln4HMZT1q8tevv0TxdoW5bwKpeEL4Y+yUykp6Wi8Ou5kYM+E1ruKfluh0NQRNQe7kL6SDhKh7ml0kzZxIWi1+LgtcuVGfl3mtY/hEZffzeK8qvCJxiBq/05SWaTkbIbUEpSV0CKBLYICIfcTu8Xu5vMMp08DgYShEkS3D8fFnPHTQBTdItZ19f5Vof35cdNA2W5suSq79XLnjm4o6EYB54LfWJq/fICLg9/nAx+qs0v2iXT4uyu8KrlooN7cVRZiscKUOQGMXe82CA6yPpP5acNDdvu2WR6HpSETnXYJVf4tgTt09zZjTXs7IgL0fRyqpyBxRavr0fgvl7mqIaRgGakP+LB7GEUDq4="



before_install:
  - "sudo add-apt-repository -y ppa:freecad-community/ppa"
  - sudo apt-get update -qq


install:
  - |
    sudo apt-get install -y \
    libocct-data-exchange-dev libocct-foundation-dev libocct-modeling-algorithms-dev libocct-modeling-data-dev \
    libboost-system-dev libboost-program-options-dev libboost-regex-dev libboost-thread-dev libboost-date-time-dev libboost-iostreams-dev libboost-filesystem-dev \
    build-essential cmake python2.7 libpython2.7-dev swig zlib1g liblzma5 opencollada-dev wget apt-transport-https python3 python3-pip python3-setuptools doxygen python3-sphinx 
  - sudo mkdir -p /usr/include/json/nlohmann/ 
  - python3 -m pip install exhale
  - sudo apt-get install python3-sphinx 
  - sudo wget https://github.com/nlohmann/json/releases/download/v3.6.1/json.hpp -O /usr/include/json/nlohmann/json.hpp
  # - sudo sh -c 'curl https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -'
  # - sudo sh -c 'curl https://storage.googleapis.com/download.dartlang.org/linux/debian/dart_stable.list > /etc/apt/sources.list.d/dart_stable.list'
  # - sudo apt-get update -qq && sudo apt-get install -y dart
  # - export PATH=$PATH:/usr/lib/dart/bin:$HOME/.pub-cache/bin
  # - git clone https://github.com/KhronosGroup/glTF-Validator && pushd glTF-Validator && pub get && pub global activate --source path ./ && popd

script:
  - pwd
  - cd src/ifcblenderexport/docs
  - make html
  - cd ../../..
  - cd cmake
  - mkdir build
  - cd build
  - |
    cmake \
    -DOCC_INCLUDE_DIR=/usr/include/opencascade \
    -DOCC_LIBRARY_DIR=/usr/lib/x86_64-linux-gnu \
    -DPYTHON_LIBRARY=/usr/lib/python2.7/config-x86_64-linux-gnu/libpython2.7.so \
    -DPYTHON_INCLUDE_DIR=/usr/include/python2.7 \
    -DPYTHON_EXECUTABLE=/usr/bin/python2.7 \
    -DLIBXML2_INCLUDE_DIR=/usr/include/libxml2 \
    -DLIBXML2_LIBRARIES="/usr/lib/x86_64-linux-gnu/libxml2.so;/lib/x86_64-linux-gnu/libz.so.1;/lib/x86_64-linux-gnu/liblzma.so.5;/usr/lib/x86_64-linux-gnu/libicuuc.so.60;/usr/lib/x86_64-linux-gnu/libicudata.so.60" \
    -DGLTF_SUPPORT=On \
    -DJSON_INCLUDE_DIR=/usr/include/json \
    -DBUILD_DOCUMENTATION=On \
    ..
  - sudo make -j2 install
    
  # - cd ../../test
  # - /usr/bin/python2.7 tests.py

  # - cd input
  
  # - /usr/local/bin/IfcConvert -yv acad2010_walls.ifc acad2010_walls.glb
  # # - gltf_validator acad2010_walls.glb
  
  # - /usr/bin/python2.7 -c "from __future__ import print_function; from io import open; import ifcopenshell; f = ifcopenshell.open('encoding.ifc'); assert list(map(ord, f[1][0])) == [39, 97, 39, 32, 49, 109, 179, 32, 8804, 32, 53, 109, 179, 32, 8805, 32, 49, 48, 109, 179]"
  
  # - |
    # (for i in *.ifc; do \
    # echo $i | tee -a log; \
    # timeout 1m /usr/local/bin/IfcConvert -yv "$i" "$i.dae" --validate >> log 2>&1; \
    # echo $i $? >> statuses; \
    # done) || true
  # - echo Failed
  # - grep -v 0$ statuses
  # - grep -v 0$ statuses | wc -l
  # - echo Succeeded
  # - grep 0$ statuses
  # - grep 0$ statuses | wc -l
after_success:
  - pwd
  - cd ../../docs
  - pwd
  - ls -al
  - MESSAGE=$(git log --oneline -1)
  - git clone https://IfcOpenBot:$GITHUB_PASSWORD@github.com/IfcOpenShell/docs
  - cd docs
  - sudo mv ../output/* .
  - git config user.email "${GITHUB_EMAIL}"
  - git config user.name "IfcOpenBot"
  - git add .
  - git commit -m "${MESSAGE}"
  - git push
